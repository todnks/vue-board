{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"로그인\", -1\n/* HOISTED */\n);\n\nvar _hoisted_2 = /*#__PURE__*/_createTextVNode(\"회원가입\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_b_input = _resolveComponent(\"b-input\");\n\n  var _component_b_button = _resolveComponent(\"b-button\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_b_input, {\n    placeholder: \"아이디\",\n    modelValue: _ctx.userid,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.userid = $event;\n    })\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createVNode(_component_b_input, {\n    placeholder: \"비밀번호\",\n    type: \"password\",\n    modelValue: _ctx.password,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return _ctx.password = $event;\n    })\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createVNode(_component_b_button, {\n    onClick: $setup.login\n  }, {\n    \"default\": _withCtx(function () {\n      return [_hoisted_2];\n    }),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onClick\"])]);\n}","map":{"version":3,"mappings":";;8BAEIA,oBAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,EAAO;AAAA;AAAP;;+CAGyB;;;;;;;uBAJ3BC,oBAKM,KALN,EAKM,IALN,EAKM,CAJJC,UAII,EAHJC,aAA8CC,kBAA9C,EAA8C;IAArCC,WAAW,EAAC,KAAyB;gBAAVC,WAAU;;aAAVA,cAAMC;;EAAI,CAA9C;;EAAA,iBAGI,EAFJJ,aAAiEC,kBAAjE,EAAiE;IAAxDC,WAAW,EAAC,MAA4C;IAArCG,IAAI,EAAC,UAAgC;gBAAZF,aAAY;;aAAZA,gBAAQC;;EAAI,CAAjE;;EAAA,iBAEI,EADJJ,aAAwCM,mBAAxC,EAAwC;IAA7BC,OAAK,EAAEC;EAAsB,CAAxC,EAAuB;wBAAE;MAAA,OAAI,YAAJ;IAAA,EAAF;;;;EAAA,CAAvB;;EAAA,cACI,CALN","names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_b_input","placeholder","_ctx","$event","type","_component_b_button","onClick","$setup"],"sourceRoot":"","sources":["/Users/se-uggim/Desktop/vue-crud-board/src/views/LoginPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>로그인</h2>\n    <b-input placeholder=\"아이디\" v-model=\"userid\" />\n    <b-input placeholder=\"비밀번호\" type=\"password\" v-model=\"password\" />\n    <b-button @click=\"login\">회원가입</b-button>\n  </div>\n</template>\n\n<script>\nimport BInput from '@/components/BInput.vue';\nimport BButton from '@/components/BButton.vue';\nimport router from '@/router';\nimport { reactive, toRefs } from 'vue';\nimport axios from 'axios';\nimport { useStore } from 'vuex';\n\nexport default {\n  components: { BInput, BButton },\n  setup() {\n    const store = useStore();\n    const log = reactive({\n      userid : '',\n      password: '',\n    }); \n    const login = async() => {\n      const { data } = await axios.get('/member', {\n        params: {\n          ...log\n        }\n      });\n       \n      if(!data.length){\n        alert(\"다시 로그인\");\n        return;\n      }\n      const [ userData ] = data;\n      if(axios.get('/sesionid')){\n        alert(\"asdfasdf\");\n      }\n      axios.post('/sessionid',{...userData});\n\n      store.commit('setUserData', userData);\n      store.commit('setUserlogin', true);\n      \n      alert('로그인 되었습니다.');\n      \n      router.push('/');\n    };\n\n    return {\n      login,\n      ...toRefs(log),\n    };\n  },\n};\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}